#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ makefilm.ai
"""

import asyncio
from playwright.async_api import async_playwright

async def test_authentication():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ makefilm.ai
    """
    print("üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ makefilm.ai...")
    
    try:
        async with async_playwright() as p:
            # –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –≤ –≤–∏–¥–∏–º–æ–º —Ä–µ–∂–∏–º–µ
            browser = await p.chromium.launch(headless=False)
            context = await browser.new_context()
            page = await context.new_page()
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º cookies
            try:
                with open('cookies.json', 'r') as f:
                    import json
                    cookies = json.load(f)
                    await context.add_cookies(cookies)
                    print("‚úÖ Cookies –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
            except:
                print("‚ö†Ô∏è Cookies –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            print("üåê –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ https://makefilm.ai...")
            await page.goto("https://makefilm.ai", wait_until='networkidle')
            await page.wait_for_timeout(3000)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π URL
            current_url = page.url
            print(f"üìÑ –¢–µ–∫—É—â–∏–π URL: {current_url}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
            print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...")
            auth_indicators = [
                'a[href*="workspace"]',
                'a[href*="profile"]',
                'button:has-text("Logout")',
                '.user-menu',
                '[data-testid="user-menu"]'
            ]
            
            is_authenticated = False
            for indicator in auth_indicators:
                try:
                    element = await page.query_selector(indicator)
                    if element:
                        is_authenticated = True
                        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {indicator}")
                        break
                except:
                    continue
            
            if not is_authenticated:
                print("‚ùå –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞")
                
                # –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                print("\nüîç –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
                login_elements = [
                    'a:has-text("Login")',
                    'a:has-text("Sign In")',
                    'button:has-text("Login")',
                    'button:has-text("Sign In")',
                    '.login-button',
                    '.signin-button'
                ]
                
                for element_selector in login_elements:
                    try:
                        element = await page.query_selector(element_selector)
                        if element:
                            text = await element.inner_text()
                            print(f"  ‚Ä¢ {element_selector} - —Ç–µ–∫—Å—Ç: '{text.strip()}'")
                    except:
                        pass
            else:
                print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
                
                # –ü—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
                print("\nüéØ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞...")
                await page.goto("https://makefilm.ai/workspace/image-generator", wait_until='networkidle')
                await page.wait_for_timeout(3000)
                
                final_url = page.url
                print(f"üìÑ –§–∏–Ω–∞–ª—å–Ω—ã–π URL: {final_url}")
                
                if "image-generator" in final_url:
                    print("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—à–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞!")
                else:
                    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞")
                    print("–í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
            
            print("\n" + "="*60)
            print("üìã –†–ï–ó–£–õ–¨–¢–ê–¢:")
            print("="*60)
            if is_authenticated:
                print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç")
                print("‚úÖ –ú–æ–∂–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞")
            else:
                print("‚ùå –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
                print("üîß –ù—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å cookies –∏–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –≤—Ä—É—á–Ω—É—é")
            print("="*60)
            
            # –ñ–¥–µ–º, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å
            input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞...")
            
            await browser.close()
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(test_authentication())
