#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ CSS-—Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤ –Ω–∞ —Å–∞–π—Ç–µ makefilm.ai
"""

import asyncio
from playwright.async_api import async_playwright

async def find_selectors():
    """
    –ò—â–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–µ CSS-—Å–µ–ª–µ–∫—Ç–æ—Ä—ã –Ω–∞ —Å–∞–π—Ç–µ makefilm.ai
    """
    print("üîç –ü–æ–∏—Å–∫ CSS-—Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤ –Ω–∞ makefilm.ai...")
    
    try:
        async with async_playwright() as p:
            # –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –≤ –≤–∏–¥–∏–º–æ–º —Ä–µ–∂–∏–º–µ
            browser = await p.chromium.launch(headless=False)
            context = await browser.new_context()
            page = await context.new_page()
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º cookies
            try:
                with open('cookies.json', 'r') as f:
                    import json
                    cookies = json.load(f)
                    await context.add_cookies(cookies)
                    print("‚úÖ Cookies –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
            except:
                print("‚ö†Ô∏è Cookies –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å–∞–π—Ç
            print("üåê –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ makefilm.ai...")
            await page.goto("https://makefilm.ai", wait_until='networkidle')
            await page.wait_for_timeout(3000)
            
            print("\n" + "="*60)
            print("üîç –ü–û–ò–°–ö –°–ï–õ–ï–ö–¢–û–†–û–í:")
            print("="*60)
            
            # –ò—â–µ–º –ø–æ–ª—è –≤–≤–æ–¥–∞
            print("\nüìù –ü–û–õ–Ø –í–í–û–î–ê:")
            input_selectors = [
                'input[type="text"]',
                'input[type="search"]',
                'textarea',
                '[contenteditable="true"]',
                'input[placeholder*="prompt"]',
                'input[placeholder*="text"]',
                'input[placeholder*="describe"]',
                '.prompt-input',
                '.text-input',
                '#prompt',
                '#text-input'
            ]
            
            for selector in input_selectors:
                try:
                    element = await page.query_selector(selector)
                    if element:
                        placeholder = await element.get_attribute('placeholder')
                        print(f"‚úÖ {selector} - placeholder: {placeholder}")
                except:
                    pass
            
            # –ò—â–µ–º –∫–Ω–æ–ø–∫–∏
            print("\nüîò –ö–ù–û–ü–ö–ò:")
            button_selectors = [
                'button[type="submit"]',
                'button:has-text("Generate")',
                'button:has-text("Create")',
                'button:has-text("Submit")',
                'button:has-text("Send")',
                '.generate-btn',
                '.create-btn',
                '.submit-btn',
                '#generate',
                '#create',
                '#submit'
            ]
            
            for selector in button_selectors:
                try:
                    element = await page.query_selector(selector)
                    if element:
                        text = await element.inner_text()
                        print(f"‚úÖ {selector} - —Ç–µ–∫—Å—Ç: {text}")
                except:
                    pass
            
            # –ò—â–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            print("\nüîó –°–°–´–õ–ö–ò –ù–ê –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
            result_selectors = [
                'a[href*="image"]',
                'a[href*="photo"]',
                'a[href*="jpg"]',
                'a[href*="png"]',
                'a[href*="gif"]',
                'a[href*="result"]',
                'a[href*="download"]',
                '.result-link',
                '.download-link',
                '.image-link',
                '[data-result-url]',
                '[data-image-url]'
            ]
            
            for selector in result_selectors:
                try:
                    elements = await page.query_selector_all(selector)
                    if elements:
                        print(f"‚úÖ {selector} - –Ω–∞–π–¥–µ–Ω–æ: {len(elements)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
                except:
                    pass
            
            print("\n" + "="*60)
            print("üìã –ò–ù–°–¢–†–£–ö–¶–ò–Ø:")
            print("="*60)
            print("1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ")
            print("2. –í—Å—Ç–∞–≤—å—Ç–µ –∏—Ö –≤ —Ñ–∞–π–ª bot.py –≤–º–µ—Å—Ç–æ TODO –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
            print("3. –ï—Å–ª–∏ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ DevTools:")
            print("   - F12 ‚Üí Elements ‚Üí –ø—Ä–∞–≤—ã–π –∫–ª–∏–∫ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–µ")
            print("   - Copy ‚Üí Copy selector")
            print("="*60)
            
            # –ñ–¥–µ–º, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å
            input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞...")
            
            await browser.close()
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(find_selectors())
