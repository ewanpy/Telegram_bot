#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤ –≥–æ—Ç–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ makefilm.ai
"""

import asyncio
from playwright.async_api import async_playwright

async def find_result_selectors():
    """
    –ò—â–µ—Ç —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –≥–æ—Ç–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    """
    print("üîç –ü–æ–∏—Å–∫ —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤ –¥–ª—è –≥–æ—Ç–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    
    try:
        async with async_playwright() as p:
            # –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –≤ –≤–∏–¥–∏–º–æ–º —Ä–µ–∂–∏–º–µ
            browser = await p.chromium.launch(headless=False)
            context = await browser.new_context()
            page = await context.new_page()
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º cookies
            try:
                with open('cookies.json', 'r') as f:
                    import json
                    cookies = json.load(f)
                    await context.add_cookies(cookies)
                    print("‚úÖ Cookies –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
            except:
                print("‚ö†Ô∏è Cookies –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
            print("üåê –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ https://makefilm.ai/workspace/image-generator...")
            await page.goto("https://makefilm.ai/workspace/image-generator", wait_until='networkidle')
            await page.wait_for_timeout(3000)
            
            print("\n" + "="*60)
            print("üìù –ò–ù–°–¢–†–£–ö–¶–ò–Ø:")
            print("="*60)
            print("1. –í–≤–µ–¥–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞")
            print("2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É Generate")
            print("3. –î–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ—è–≤–ª–µ–Ω–∏—è –≥–æ—Ç–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
            print("4. –í–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏ –Ω–∞–∂–º–∏—Ç–µ Enter")
            print("="*60)
            
            # –ñ–¥–µ–º, –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            input("\n–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...")
            
            print("\nüîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –≥–æ—Ç–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
            
            # –ò—â–µ–º –≤—Å–µ —Å—Å—ã–ª–∫–∏
            print("\nüîó –í–°–ï –°–°–´–õ–ö–ò –ù–ê –°–¢–†–ê–ù–ò–¶–ï:")
            links = await page.query_selector_all('a')
            for i, link in enumerate(links):
                try:
                    href = await link.get_attribute('href')
                    text = await link.inner_text()
                    if href and ('image' in href.lower() or 'jpg' in href.lower() or 'png' in href.lower() or 'download' in href.lower()):
                        print(f"  {i+1}. {href} - —Ç–µ–∫—Å—Ç: '{text.strip()}'")
                except:
                    pass
            
            # –ò—â–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            print("\nüñºÔ∏è –í–°–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø –ù–ê –°–¢–†–ê–ù–ò–¶–ï:")
            images = await page.query_selector_all('img')
            for i, img in enumerate(images):
                try:
                    src = await img.get_attribute('src')
                    alt = await img.get_attribute('alt')
                    if src:
                        print(f"  {i+1}. {src} - alt: '{alt}'")
                except:
                    pass
            
            # –ò—â–µ–º –∫–Ω–æ–ø–∫–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
            print("\n‚¨áÔ∏è –ö–ù–û–ü–ö–ò –°–ö–ê–ß–ò–í–ê–ù–ò–Ø:")
            buttons = await page.query_selector_all('button, a')
            for i, button in enumerate(buttons):
                try:
                    text = await button.inner_text()
                    if text and ('download' in text.lower() or '—Å–∫–∞—á–∞—Ç—å' in text.lower() or 'save' in text.lower()):
                        print(f"  {i+1}. '{text.strip()}'")
                except:
                    pass
            
            print("\n" + "="*60)
            print("üìã –†–ï–ö–û–ú–ï–ù–î–£–ï–ú–´–ï –°–ï–õ–ï–ö–¢–û–†–´:")
            print("="*60)
            
            # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            print("\n–î–ª—è —Å—Å—ã–ª–æ–∫ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:")
            print('result_selectors = [')
            print('    "a[href*=\\"image\\"]",')
            print('    "a[href*=\\"jpg\\"]",')
            print('    "a[href*=\\"png\\"]",')
            print('    "a[href*=\\"download\\"]",')
            print('    ".download-link",')
            print('    ".result-image a"')
            print(']')
            
            print("\n" + "="*60)
            print("üìù –ò–ù–°–¢–†–£–ö–¶–ò–Ø:")
            print("="*60)
            print("1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ")
            print("2. –í—Å—Ç–∞–≤—å—Ç–µ –∏—Ö –≤ —Ñ–∞–π–ª bot.py –≤–º–µ—Å—Ç–æ TODO –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
            print("3. –ï—Å–ª–∏ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç:")
            print("   - F12 ‚Üí Elements ‚Üí –ø—Ä–∞–≤—ã–π –∫–ª–∏–∫ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–µ")
            print("   - Copy ‚Üí Copy selector")
            print("="*60)
            
            # –ñ–¥–µ–º, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å
            input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞...")
            
            await browser.close()
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(find_result_selectors())
